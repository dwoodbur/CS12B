head	1.6;
access;
symbols;
locks;
comment	@ * @;


1.6
date	2013.02.14.17.12.37;	author -;	state -;
branches;
next	1.5;

1.5
date	2013.02.14.17.08.21;	author -;	state -;
branches;
next	1.4;

1.4
date	2013.02.14.17.05.52;	author -;	state -;
branches;
next	1.3;

1.3
date	2013.02.14.17.05.34;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.02.14.17.05.08;	author -;	state -;
branches;
next	1.1;

1.1
date	2013.02.14.16.55.26;	author -;	state -;
branches;
next	;


desc
@@


1.6
log
@-
@
text
@// $Id: list4.c,v 1.5 2013-02-14 09:08:21-08 - - $

#include <assert.h>
#include <stdio.h>
#include <stdlib.h>

typedef struct node node;
struct node {
   char *word;
   node *link;
};

int main (int argc, char **argv) {
   node *head = NULL;
   for (int argi = 0; argi < argc; ++argi) {
      node *node = malloc (sizeof (struct node));
      assert (node != NULL);
      node->word = argv[argi];
      node->link = head;
      head = node;
   }
   node *curr = head;
   while(curr->link != NULL){
      printf ("%p->node {word=%p->[%s], link = %p}\n",
              curr, curr->word, curr->word, curr->link);
   curr = curr->link;
   }
   printf("%p->node {word=%p->[%s]}\n", curr,
             curr->word, curr->word);    
   free(*node);
   return 9;
}
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: list4.c,v 1.4 2013-02-14 09:05:52-08 - - $
d30 1
a30 1
   free(node);
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: list4.c,v 1.3 2013-02-14 09:05:34-08 - - $
a26 1
   free(curr);
d30 1
a30 1
   free(curr);
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: list4.c,v 1.2 2013-02-14 09:05:08-08 - - $
d29 2
a30 1
   printf("%p->node {word=%p->[%s]}\n", curr, curr->word, curr->word);    
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: list3.c,v 1.4 2013-02-14 09:03:37-08 - - $
d30 1
a30 1

@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: list3.c,v 1.1 2013-02-13 19:02:26-08 - - $
d15 1
a15 2
   node *special;special->word = argv[0];special->link = NULL;  
   for (int argi = 0; argi < 5; ++argi) {
d23 1
a23 1
   for(node *curr = head; curr != NULL; curr = curr->link){   
d26 5
a30 3
      free(curr);
    }
   
@
