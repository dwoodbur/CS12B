Script started on Wed 13 Feb 2013 05:53:13 PM PST
[?1034hbash-4.1$ mk uninit.c
CSOURCE=uninit.c EXECBIN=uninit
+ cid + uninit.c
+ checksource uninit.c
+ gcc -g -O0 -Wall -Wextra -std=gnu99 uninit.c -o uninit -lm
uninit.c: In function â€˜mainâ€™:
uninit.c:6: warning: unused parameter â€˜argcâ€™
uninit.c:6: warning: unused parameter â€˜argvâ€™
uninit.c:8: warning: â€˜fooâ€™ is used uninitialized in this function
uninit.c:10: warning: â€˜pointerâ€™ is used uninitialized in this function
+ set +x
============================================================
bash-4.1$ valgrind uninit
==9321== Memcheck, a memory error detector
==9321== Copyright (C) 2002-2010, and GNU GPL'd, by Julian Seward et al.
==9321== Using Valgrind-3.6.0 and LibVEX; rerun with -h for copyright info
==9321== Command: uninit
==9321== 
==9321== Use of uninitialised value of size 8
==9321==    at 0x37AAA437BB: _itoa_word (_itoa.c:195)
==9321==    by 0x37AAA46367: vfprintf (vfprintf.c:1595)
==9321==    by 0x37AAA4EA29: printf (printf.c:35)
==9321==    by 0x400519: main (uninit.c:8)
==9321== 
==9321== Conditional jump or move depends on uninitialised value(s)
==9321==    at 0x37AAA437C5: _itoa_word (_itoa.c:195)
==9321==    by 0x37AAA46367: vfprintf (vfprintf.c:1595)
==9321==    by 0x37AAA4EA29: printf (printf.c:35)
==9321==    by 0x400519: main (uninit.c:8)
==9321== 
==9321== Conditional jump or move depends on uninitialised value(s)
==9321==    at 0x37AAA45979: vfprintf (vfprintf.c:1595)
==9321==    by 0x37AAA4EA29: printf (printf.c:35)
==9321==    by 0x400519: main (uninit.c:8)
==9321== 
==9321== Conditional jump or move depends on uninitialised value(s)
==9321==    at 0x37AAA45997: vfprintf (vfprintf.c:1595)
==9321==    by 0x37AAA4EA29: printf (printf.c:35)
==9321==    by 0x400519: main (uninit.c:8)
==9321== 
7
==9321== Use of uninitialised value of size 8
==9321==    at 0x40051E: main (uninit.c:10)
==9321== 
==9321== Invalid read of size 4
==9321==    at 0x40051E: main (uninit.c:10)
==9321==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==9321== 
==9321== 
==9321== Process terminating with default action of signal 11 (SIGSEGV)
==9321==  Access not within mapped region at address 0x0
==9321==    at 0x40051E: main (uninit.c:10)
==9321==  If you believe this happened as a result of a stack
==9321==  overflow in your program's main thread (unlikely but
==9321==  possible), you can try to increase the size of the
==9321==  main thread stack using the --main-stacksize= flag.
==9321==  The main thread stack size used in this run was 10485760.
==9321== 
==9321== HEAP SUMMARY:
==9321==     in use at exit: 0 bytes in 0 blocks
==9321==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9321== 
==9321== All heap blocks were freed -- no leaks are possible
==9321== 
==9321== For counts of detected and suppressed errors, rerun with: -v
==9321== Use --track-origins=yes to see where uninitialised values come from
==9321== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 6 from 6)
Segmentation fault (core dumped)
bash-4.1$ echo $?
139
bash-4.1$ pstatus 139
pstatus: 0x008B TERMINATED 11: Segmentation fault (core dumped)
bash-4.1$ exit
exit

Script done on Wed 13 Feb 2013 05:53:38 PM PST
